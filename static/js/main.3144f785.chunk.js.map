{"version":3,"sources":["Button.tsx","Counter.tsx","App.tsx","reportWebVitals.ts","index.tsx","Counter.module.css"],"names":["Button","props","className","s","buttonComponent","onClick","changeValue","disabled","error","title","Counter","body","result","value","clickBoard","addValue","resetValue","App","useState","setValue","setError","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"6MASO,SAASA,EAAOC,GAInB,OAAO,wBAAQC,UAAWC,IAAEC,gBACbC,QAJS,WACpBJ,EAAMK,eAIKC,SAAUN,EAAMO,MAFxB,SAGFP,EAAMQ,QCLP,SAASC,EAAQT,GAErB,OACI,sBAAKC,UAAWC,IAAEQ,KAAlB,UACI,qBAAKT,UAAYD,EAAMO,MAAkBL,IAAES,OAAZT,IAAEK,MAAjC,SACKP,EAAMY,QAEX,sBAAKX,UAAWC,IAAEW,WAAlB,UACI,cAACd,EAAD,CAAQS,MAAO,MACPH,YAAaL,EAAMc,SACnBP,OAAQP,EAAMO,QAEtB,cAACR,EAAD,CAAQS,MAAO,QACPH,YAAaL,EAAMe,WACnBR,MAAOP,EAAMO,cCUtBS,MA/Bf,WAAgB,IAAD,EACeC,mBAAiB,GADhC,mBACJL,EADI,KACGM,EADH,OAEeD,oBAAkB,GAFjC,mBAEJV,EAFI,KAEGY,EAFH,KAkBX,OACI,8BACI,cAACV,EAAD,CACIG,MAAOA,EACPE,SAjBK,WAETK,IADAP,GAAS,IAIbM,EAASN,EAAQ,IAaTG,WAVO,WAChBG,EAAS,GACRC,GAAS,IASDZ,MAAOA,OCdRa,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,KAAO,sBAAsB,OAAS,wBAAwB,WAAa,4BAA4B,gBAAkB,iCAAiC,MAAQ,0B","file":"static/js/main.3144f785.chunk.js","sourcesContent":["import React from \"react\";\r\nimport s from \"./Counter.module.css\"\r\n\r\ntype ButtonPropsType = {\r\n    changeValue: () => void\r\n    title: string\r\n    error: boolean\r\n}\r\n\r\nexport function Button(props: ButtonPropsType) {\r\n    const addValueOnClick = () => {\r\n        props.changeValue()\r\n    }\r\n    return <button className={s.buttonComponent}\r\n                   onClick={addValueOnClick}\r\n                   disabled={props.error}>\r\n        {props.title}\r\n    </button>\r\n}","import React from 'react';\r\nimport {Button} from \"./Button\";\r\nimport s from \"./Counter.module.css\"\r\n\r\ntype CounterPropsType = {\r\n    value: number\r\n    addValue: () => void\r\n    resetValue: () => void\r\n    error: boolean\r\n};\r\n\r\n export function Counter(props: CounterPropsType) {\r\n\r\n    return (\r\n        <div className={s.body}>\r\n            <div className={!props.error ? s.error : s.result}>\r\n                {props.value}\r\n            </div>\r\n            <div className={s.clickBoard}>\r\n                <Button title={'inc'}\r\n                        changeValue={props.addValue}\r\n                        error={!props.error}\r\n                />\r\n                <Button title={'reset'}\r\n                        changeValue={props.resetValue}\r\n                        error={props.error}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n","import React, {useState} from 'react';\nimport {Counter} from './Counter';\n\n\nfunction App() {\n    const [value, setValue] = useState<number>(0);\n    const [error, setError] = useState<boolean>(true);\n\n\n    const addValue = () => {\n        if (value >= 4) {\n            setError(false) } else {\n            setError(true)\n        }\n        setValue(value + 1)\n    };\n\n    const resetValue = () => {\n       setValue(0)\n        setError(true)\n    };\n\n    return (\n        <div>\n            <Counter\n                value={value}\n                addValue={addValue}\n                resetValue={resetValue}\n                error={error}\n            />\n\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Counter_body__2p2ww\",\"result\":\"Counter_result__luTgo\",\"clickBoard\":\"Counter_clickBoard__3zVfS\",\"buttonComponent\":\"Counter_buttonComponent__2XPdO\",\"error\":\"Counter_error__eqi3N\"};"],"sourceRoot":""}