{"version":3,"sources":["Button.tsx","Counter.tsx","InputValue.tsx","CounterSetting.tsx","App.tsx","reportWebVitals.ts","index.tsx","Counter.module.css"],"names":["Button","props","className","s","buttonComponent","onClick","changeValue","disabled","error","title","Counter","body","alertSetTitle","titleItem","errorMaxValue","errorStartValue","titleItemError","result","value","clickBoard","addValue","errorIncrement","resetValue","errorReset","InputValue","inputValueContainer","inputTitle","inputItem","type","onChange","e","onChangeValue","Number","currentTarget","errorInput","CounterSetting","inputBoard","maxValue","setMaxValue","startValue","setStartValue","clickBoarCounterSet","setButton","App","useState","setValue","errorValue","setErrorValue","errorIncrementButton","setErrorIncrementButton","errorResetButton","setErrorResetButton","errorSettingButton","setErrorSettingButton","setAlertSetTitle","setErrorMaxValue","setErrorStartValue","useEffect","getFromLocalStorage","maxValueAsString","localStorage","getItem","startValueAsString","newMaxValue","JSON","parse","newStartValue","setItem","stringify","newValue","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"6MASO,SAASA,EAAOC,GAInB,OAAO,wBAAQC,UAAWC,IAAEC,gBACbC,QAJS,WACpBJ,EAAMK,eAIKC,SAAUN,EAAMO,MAFxB,SAGFP,EAAMQ,QCCR,SAASC,EAAQT,GAEpB,OAAO,sBAAKC,UAAWC,IAAEQ,KAAlB,UACFV,EAAMW,cAAgB,qBAAKV,UAAWC,IAAEU,UAAlB,0CAEdZ,EAAMa,eAAiBb,EAAMc,gBAAkB,qBAAKb,UAAWC,IAAEa,eAAlB,8BAE/C,qBAAKd,UAAWD,EAAMO,MAAQL,IAAEK,MAAQL,IAAEc,OAA1C,SACJhB,EAAMiB,QAEX,sBAAKhB,UAAWC,IAAEgB,WAAlB,UACI,cAACnB,EAAD,CAAQS,MAAO,MACPH,YAAaL,EAAMmB,SACnBZ,MAAOP,EAAMoB,iBAErB,cAACrB,EAAD,CAAQS,MAAO,QACPH,YAAaL,EAAMqB,WACnBd,MAAOP,EAAMsB,mBCxB1B,SAASC,EAAWvB,GAKvB,OAAO,sBAAKC,UAAWC,IAAEsB,oBAAlB,UACH,uBAAMvB,UAAWC,IAAEuB,WAAnB,UACKzB,EAAMQ,MADX,aAGA,qBAAKP,UAAWC,IAAEwB,UAAlB,SACI,uBAAOC,KAAK,SACLV,MAAOjB,EAAMiB,MACbW,SAXS,SAACC,GACrB7B,EAAM8B,cAAcC,OAAOF,EAAEG,cAAcf,SAWhChB,UAAWD,EAAMO,MAAQL,IAAE+B,WAAa,UCNpD,SAASC,EAAelC,GAC3B,OAAO,sBAAKC,UAAWC,IAAEQ,KAAlB,UACH,sBAAKT,UAAWC,IAAEiC,WAAlB,UACI,cAACZ,EAAD,CAAYN,MAAOjB,EAAMoC,SACbN,cAAe9B,EAAMqC,YACrB9B,MAAOP,EAAMa,cACbL,MAAO,QAGnB,cAACe,EAAD,CAAYN,MAAOjB,EAAMsC,WACbR,cAAe9B,EAAMuC,cACrBhC,MAAOP,EAAMc,gBACbN,MAAO,aAGvB,qBAAKP,UAAWC,IAAEsC,oBAAlB,SACI,cAACzC,EAAD,CAAQS,MAAO,MACPH,YAAaL,EAAMyC,UACnBlC,MAAOP,EAAMO,aC0FlBmC,MAzHf,WAAgB,IAAD,EACeC,mBAAiB,GADhC,mBACJ1B,EADI,KACG2B,EADH,OAEqBD,mBAAiB,GAFtC,mBAEJP,EAFI,KAEMC,EAFN,OAGyBM,mBAAiB,GAH1C,mBAGJL,EAHI,KAGQC,EAHR,OAIyBI,oBAAkB,GAJ3C,mBAIJE,EAJI,KAIQC,EAJR,OAK6CH,oBAAkB,GAL/D,mBAKJI,EALI,KAKkBC,EALlB,OAMqCL,oBAAkB,GANvD,mBAMJM,EANI,KAMcC,EANd,OAOyCP,oBAAkB,GAP3D,mBAOJQ,EAPI,KAOgBC,EAPhB,OAQ+BT,oBAAkB,GARjD,mBAQJhC,EARI,KAQW0C,EARX,OAS+BV,oBAAkB,GATjD,mBASJ9B,EATI,KASWyC,EATX,OAUmCX,oBAAkB,GAVrD,mBAUJ7B,EAVI,KAUayC,EAVb,KAYXC,qBAAU,WACNC,MACD,IAEH,IAAMA,EAAsB,WACxB,IAAIC,EAAmBC,aAAaC,QAAQ,YACxCC,EAAqBF,aAAaC,QAAQ,cAC9C,GAAIF,GAAoBG,EAAoB,CACxC,IAAIC,EAAcC,KAAKC,MAAMN,GACzBO,EAAgBF,KAAKC,MAAMH,GAC/BxB,EAAYyB,GACZvB,EAAc0B,KAuEtB,OACI,gCACI,cAACxD,EAAD,CACIQ,MAAOA,EACPE,SA1DK,WACTF,EAAQ,GAAKmB,GACbY,GAAwB,GACxBF,GAAc,GACdI,GAAoB,GACpBN,EAAS3B,EAAQ,KAEjB+B,GAAwB,GACxBE,GAAoB,GACpBN,EAAS3B,EAAQ,KAkDbI,WA/CO,WACf2B,GAAwB,GACxBE,GAAoB,GACpBJ,GAAc,GACdF,EAASN,IA4CDlB,eAAgB2B,EAChBzB,WAAY2B,EACZtC,cAAeA,EACfE,cAAeA,EACfC,gBAAiBA,EACjBP,MAAOsC,IAEX,cAACX,EAAD,CACII,WAAYA,EACZF,SAAUA,EACVK,UA/EM,WACdG,EAASN,GACTU,GAAwB,GACxBI,GAAsB,GACtBE,GAAiB,GACjBC,GAAmB,GACnBF,GAAiB,GAVjBM,aAAaO,QAAQ,WAAYH,KAAKI,UAAU/B,IAChDuB,aAAaO,QAAQ,aAAcH,KAAKI,UAAU7B,KAmF1C/B,MAAO4C,EACPd,YArDW,SAAC+B,GAChBA,GAAY9B,GAAc8B,GAAY,GACtClB,GAAoB,GACpBE,GAAsB,GACtBE,GAAiB,GACjBD,GAAiB,KAGjBH,GAAoB,GACpBF,GAAwB,GACxBI,GAAsB,GACtBE,GAAiB,GACjBD,GAAiB,GACjBP,GAAc,IAElBT,EAAY+B,IAuCJ7B,cArCa,SAAC6B,GAClBA,EAAW,GAAKA,GAAYhC,GAC5Bc,GAAoB,GACpBE,GAAsB,GACtBG,GAAmB,GACnBF,GAAiB,KAGjBH,GAAoB,GACpBF,GAAwB,GACxBI,GAAsB,GACtBC,GAAiB,GACjBE,GAAmB,GACnBT,GAAc,IAElBP,EAAc6B,IAuBNvD,cAAeA,EACfC,gBAAiBA,QCzGlBuD,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,KAAO,sBAAsB,OAAS,wBAAwB,UAAY,2BAA2B,eAAiB,gCAAgC,WAAa,4BAA4B,oBAAsB,qCAAqC,UAAY,2BAA2B,WAAa,4BAA4B,WAAa,4BAA4B,oBAAsB,qCAAqC,gBAAkB,iCAAiC,MAAQ,uBAAuB,YAAc,6BAA6B,WAAa,+B","file":"static/js/main.0adf81f1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport s from \"./Counter.module.css\"\r\n\r\ntype ButtonPropsType = {\r\n    changeValue: () => void\r\n    title: string\r\n    error: boolean\r\n}\r\n\r\nexport function Button(props: ButtonPropsType) {\r\n    const addValueOnClick = () => {\r\n        props.changeValue()\r\n    }\r\n    return <button className={s.buttonComponent}\r\n                   onClick={addValueOnClick}\r\n                   disabled={props.error}>\r\n        {props.title}\r\n    </button>\r\n}","import React from 'react';\r\nimport {Button} from \"./Button\";\r\nimport s from \"./Counter.module.css\"\r\n\r\ntype CounterPropsType = {\r\n    value: number\r\n    addValue: () => void\r\n    resetValue: () => void\r\n    errorIncrement: boolean\r\n    errorReset: boolean\r\n    alertSetTitle: boolean\r\n    errorMaxValue: boolean\r\n    errorStartValue: boolean\r\n    error: boolean\r\n\r\n};\r\n\r\nexport function Counter(props: CounterPropsType) {\r\n\r\n    return <div className={s.body}>\r\n        {props.alertSetTitle ? <div className={s.titleItem}>\r\n            enter values and press 'set'\r\n        </div> : props.errorMaxValue || props.errorStartValue ? <div className={s.titleItemError}>\r\n            Incorrect value!\r\n        </div> : <div className={props.error ? s.error : s.result}>\r\n            {props.value}\r\n        </div>}\r\n        <div className={s.clickBoard}>\r\n            <Button title={'inc'}\r\n                    changeValue={props.addValue}\r\n                    error={props.errorIncrement}\r\n            />\r\n            <Button title={'reset'}\r\n                    changeValue={props.resetValue}\r\n                    error={props.errorReset}\r\n            />\r\n        </div>\r\n    </div>\r\n}\r\n","import React, {ChangeEvent} from 'react'\r\nimport s from \"./Counter.module.css\";\r\n\r\ntype InputValueType = {\r\n    value: number\r\n    onChangeValue: (newValue: number) => void\r\n    error: boolean\r\n    title: string\r\n}\r\n\r\nexport function InputValue(props: InputValueType) {\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        props.onChangeValue(Number(e.currentTarget.value))\r\n    }\r\n\r\n    return <div className={s.inputValueContainer}>\r\n        <span className={s.inputTitle}>\r\n            {props.title} value:\r\n        </span>\r\n        <div className={s.inputItem}>\r\n            <input type=\"number\"\r\n                   value={props.value}\r\n                   onChange={onChangeHandler}\r\n                   className={props.error ? s.errorInput : ''}\r\n            />\r\n        </div>\r\n    </div>\r\n\r\n}","import React from 'react';\r\nimport {Button} from \"./Button\";\r\nimport s from \"./Counter.module.css\"\r\nimport {InputValue} from \"./InputValue\";\r\n\r\ntype CounterPropsType = {\r\n    startValue: number\r\n    maxValue: number\r\n    setButton: () => void\r\n    error: boolean\r\n    errorMaxValue: boolean\r\n    errorStartValue: boolean\r\n    setMaxValue: (newValue: number) => void\r\n    setStartValue: (newValue: number) => void\r\n\r\n};\r\n\r\nexport function CounterSetting(props: CounterPropsType) {\r\n    return <div className={s.body}>\r\n        <div className={s.inputBoard}>\r\n            <InputValue value={props.maxValue}\r\n                        onChangeValue={props.setMaxValue}\r\n                        error={props.errorMaxValue}\r\n                        title={\"max\"}\r\n            />\r\n\r\n            <InputValue value={props.startValue}\r\n                        onChangeValue={props.setStartValue}\r\n                        error={props.errorStartValue}\r\n                        title={\"start\"}\r\n            />\r\n        </div>\r\n        <div className={s.clickBoarCounterSet}>\r\n            <Button title={'set'}\r\n                    changeValue={props.setButton}\r\n                    error={props.error}\r\n            />\r\n        </div>\r\n    </div>\r\n}\r\n","import React, {useEffect, useState} from 'react';\nimport {Counter} from './Counter';\nimport {CounterSetting} from \"./CounterSetting\";\n\nfunction App() {\n    const [value, setValue] = useState<number>(0)\n    const [maxValue, setMaxValue] = useState<number>(0)\n    const [startValue, setStartValue] = useState<number>(0)\n    const [errorValue, setErrorValue] = useState<boolean>(false)\n    const [errorIncrementButton, setErrorIncrementButton] = useState<boolean>(true)\n    const [errorResetButton, setErrorResetButton] = useState<boolean>(true)\n    const [errorSettingButton, setErrorSettingButton] = useState<boolean>(false)\n    const [alertSetTitle, setAlertSetTitle] = useState<boolean>(false)\n    const [errorMaxValue, setErrorMaxValue] = useState<boolean>(false)\n    const [errorStartValue, setErrorStartValue] = useState<boolean>(false)\n\n    useEffect(() => {\n        getFromLocalStorage()\n    }, [])\n\n    const getFromLocalStorage = () => {\n        let maxValueAsString = localStorage.getItem('maxValue')\n        let startValueAsString = localStorage.getItem('startValue')\n        if (maxValueAsString && startValueAsString) {\n            let newMaxValue = JSON.parse(maxValueAsString)\n            let newStartValue = JSON.parse(startValueAsString)\n            setMaxValue(newMaxValue)\n            setStartValue(newStartValue)\n        }\n    }\n    const setToLocalStorage = () => {\n        localStorage.setItem('maxValue', JSON.stringify(maxValue))\n        localStorage.setItem('startValue', JSON.stringify(startValue))\n    }\n\n    const setButton = () => {\n        setValue(startValue)\n        setErrorIncrementButton(false)\n        setErrorSettingButton(true)\n        setErrorMaxValue(false)\n        setErrorStartValue(false)\n        setAlertSetTitle(false)\n        setToLocalStorage()\n    }\n    const addValue = () => {\n        if (value + 1 >= maxValue) {\n            setErrorIncrementButton(true)\n            setErrorValue(true)\n            setErrorResetButton(false)\n            setValue(value + 1)\n        } else {\n            setErrorIncrementButton(false)\n            setErrorResetButton(false)\n            setValue(value + 1)\n        }\n    }\n    const resetValue = () => {\n        setErrorIncrementButton(false)\n        setErrorResetButton(true)\n        setErrorValue(false)\n        setValue(startValue)\n    }\n\n    const changeMaxValue = (newValue: number) => {\n        if (newValue <= startValue || newValue <= 0) {\n            setErrorResetButton(true)\n            setErrorSettingButton(true)\n            setErrorMaxValue(true)\n            setAlertSetTitle(false)\n\n        } else {\n            setErrorResetButton(true)\n            setErrorIncrementButton(true)\n            setErrorSettingButton(false)\n            setErrorMaxValue(false)\n            setAlertSetTitle(true)\n            setErrorValue(false)\n        }\n        setMaxValue(newValue)\n    }\n    const changeStartValue = (newValue: number) => {\n        if (newValue < 0 || newValue >= maxValue) {\n            setErrorResetButton(true)\n            setErrorSettingButton(true)\n            setErrorStartValue(true)\n            setAlertSetTitle(false)\n\n        } else {\n            setErrorResetButton(true)\n            setErrorIncrementButton(true)\n            setErrorSettingButton(false)\n            setAlertSetTitle(true)\n            setErrorStartValue(false)\n            setErrorValue(false)\n        }\n        setStartValue(newValue)\n    }\n\n    return (\n        <div>\n            <Counter\n                value={value}\n                addValue={addValue}\n                resetValue={resetValue}\n                errorIncrement={errorIncrementButton}\n                errorReset={errorResetButton}\n                alertSetTitle={alertSetTitle}\n                errorMaxValue={errorMaxValue}\n                errorStartValue={errorStartValue}\n                error={errorValue}\n            />\n            <CounterSetting\n                startValue={startValue}\n                maxValue={maxValue}\n                setButton={setButton}\n                error={errorSettingButton}\n                setMaxValue={changeMaxValue}\n                setStartValue={changeStartValue}\n                errorMaxValue={errorMaxValue}\n                errorStartValue={errorStartValue}\n            />\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Counter_body__2p2ww\",\"result\":\"Counter_result__luTgo\",\"titleItem\":\"Counter_titleItem__3Xpn2\",\"titleItemError\":\"Counter_titleItemError__1VnCB\",\"inputBoard\":\"Counter_inputBoard__eql-3\",\"inputValueContainer\":\"Counter_inputValueContainer__3H2Vp\",\"inputItem\":\"Counter_inputItem__2TrUr\",\"inputTitle\":\"Counter_inputTitle__37DcJ\",\"clickBoard\":\"Counter_clickBoard__3zVfS\",\"clickBoarCounterSet\":\"Counter_clickBoarCounterSet__1Rpb-\",\"buttonComponent\":\"Counter_buttonComponent__2XPdO\",\"error\":\"Counter_error__eqi3N\",\"buttonStyle\":\"Counter_buttonStyle__2SPAb\",\"errorInput\":\"Counter_errorInput__1SJoU\"};"],"sourceRoot":""}