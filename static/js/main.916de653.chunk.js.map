{"version":3,"sources":["Counter.module.css","Button.tsx","Counter.tsx","CounterSetting.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Button","props","className","s","buttonComponent","onClick","changeValue","disabled","error","title","Counter","body","alertSetTitle","titleItem","incorrectValue","titleItemError","result","value","clickBoard","addValue","errorIncrement","resetValue","errorReset","CounterSetting","inputBoard","inputItem","type","maxValue","onChange","e","setMaxValue","Number","currentTarget","errorInput","startValue","setStartValue","clickBoarCounterSet","setButton","App","useState","errorSetting","state","setState","newValue","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.916de653.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Counter_body__2p2ww\",\"result\":\"Counter_result__luTgo\",\"titleItem\":\"Counter_titleItem__3Xpn2\",\"titleItemError\":\"Counter_titleItemError__1VnCB\",\"inputBoard\":\"Counter_inputBoard__eql-3\",\"inputItem\":\"Counter_inputItem__2TrUr\",\"clickBoard\":\"Counter_clickBoard__3zVfS\",\"clickBoarCounterSet\":\"Counter_clickBoarCounterSet__1Rpb-\",\"buttonComponent\":\"Counter_buttonComponent__2XPdO\",\"error\":\"Counter_error__eqi3N\",\"buttonStyle\":\"Counter_buttonStyle__2SPAb\",\"errorInput\":\"Counter_errorInput__1SJoU\"};","import React from \"react\";\r\nimport s from \"./Counter.module.css\"\r\n\r\ntype ButtonPropsType = {\r\n    changeValue: () => void\r\n    title: string\r\n    error: boolean\r\n}\r\n\r\nexport function Button(props: ButtonPropsType) {\r\n    const addValueOnClick = () => {\r\n        props.changeValue()\r\n    }\r\n    return <button className={s.buttonComponent}\r\n                   onClick={addValueOnClick}\r\n                   disabled={props.error}>\r\n        {props.title}\r\n    </button>\r\n}","import React from 'react';\r\nimport {Button} from \"./Button\";\r\nimport s from \"./Counter.module.css\"\r\n\r\ntype CounterPropsType = {\r\n    value: number\r\n    addValue: () => void\r\n    resetValue: () => void\r\n    errorIncrement: boolean\r\n    errorReset: boolean\r\n    alertSetTitle: boolean\r\n    incorrectValue: boolean\r\n    error: boolean\r\n\r\n};\r\n\r\nexport function Counter(props: CounterPropsType) {\r\n\r\n    return (\r\n        <div className={s.body}>\r\n            {props.alertSetTitle ? <div className={s.titleItem}>\r\n                enter values and press 'set'\r\n            </div> : props.incorrectValue ? <div className={s.titleItemError}>\r\n                Incorrect value!\r\n            </div> : <div className={props.error ? s.error : s.result}>\r\n                {props.value}\r\n            </div>}\r\n            <div className={s.clickBoard}>\r\n                <Button title={'inc'}\r\n                        changeValue={props.addValue}\r\n                        error={props.errorIncrement}\r\n                />\r\n                <Button title={'reset'}\r\n                        changeValue={props.resetValue}\r\n                        error={props.errorReset}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n","import React, {ChangeEvent} from 'react';\r\nimport {Button} from \"./Button\";\r\nimport s from \"./Counter.module.css\"\r\n\r\ntype CounterPropsType = {\r\n    startValue: number\r\n    maxValue: number\r\n    setButton: () => void\r\n    error: boolean\r\n    incorrectValue: boolean\r\n    setMaxValue: (newValue: number) => void\r\n    setStartValue: (newValue: number) => void\r\n};\r\n\r\nexport function CounterSetting(props: CounterPropsType) {\r\n\r\n    const onChangeMaxValue = (e: ChangeEvent<HTMLInputElement>) => {\r\n        props.setMaxValue(Number(e.currentTarget.value))\r\n    }\r\n    const onChangeStartValue = (e: ChangeEvent<HTMLInputElement>) => {\r\n        props.setStartValue(Number(e.currentTarget.value))\r\n    }\r\n\r\n    return (\r\n        <div className={s.body}>\r\n            <div className={s.inputBoard}>\r\n                <div className={s.inputItem}>\r\n                    max value:\r\n                </div>\r\n                <div className={s.inputItem}>\r\n                    <input type=\"number\"\r\n                           value={props.maxValue}\r\n                           onChange={onChangeMaxValue}\r\n                           className={props.incorrectValue ? s.errorInput : ''}\r\n                    />\r\n                </div>\r\n                <div className={s.inputItem}>\r\n                    start value:\r\n                </div>\r\n                <div className={s.inputItem}>\r\n                    <input type=\"number\"\r\n                           value={props.startValue}\r\n                           onChange={onChangeStartValue}\r\n                           className={props.incorrectValue ? s.errorInput : ''}\r\n                    />\r\n                </div>\r\n\r\n            </div>\r\n            <div className={s.clickBoarCounterSet}>\r\n                <Button title={'set'}\r\n                        changeValue={props.setButton}\r\n                        error={props.error}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n","import React, {useState} from 'react';\nimport {Counter} from './Counter';\nimport {CounterSetting} from \"./CounterSetting\";\n\ntype  StatePropsType = {\n    value: number\n    errorIncrement: boolean\n    errorReset: boolean\n    errorSetting: boolean\n    maxValue: number\n    startValue: number\n    alertSetTitle: boolean\n    incorrectValue: boolean\n    error: boolean\n}\n\n\nfunction App() {\n    const [state, setState] = useState<StatePropsType>({\n        value: 0,\n        error: false,\n        errorIncrement: true,\n        errorReset: true,\n        errorSetting: true,\n        maxValue: 0,\n        startValue: 0,\n        alertSetTitle: false,\n        incorrectValue: false\n    })\n\n    const setButton = () => {\n        return setState({\n            ...state,\n            value: state.startValue,\n            errorIncrement: false,\n            errorSetting: true,\n            incorrectValue: false,\n            alertSetTitle: false\n        })\n    }\n    const addValue = () => {\n        if (state.value + 1 >= state.maxValue) {\n            setState({\n                ...state,\n                errorIncrement: true,\n                error: true,\n                errorReset: false,\n                value: state.value + 1\n            })\n        } else {\n            setState({\n                ...state,\n                errorIncrement: false,\n                errorReset: false,\n                value: state.value + 1\n            })\n        }\n    }\n    const resetValue = () => {\n        return setState({\n            ...state,\n            errorIncrement: false,\n            errorReset: true,\n            error: false,\n            value: state.startValue\n        })\n    }\n    const changeValue = (startValue: number, maxValue: number) => {\n        if (startValue < 0 || maxValue <= startValue) {\n            setState({\n                ...state,\n                errorReset: true,\n                errorSetting: true,\n                startValue: startValue,\n                maxValue: maxValue,\n                incorrectValue: true,\n                alertSetTitle: false\n            })\n        } else {\n            setState({\n                ...state,\n                errorReset: true,\n                errorSetting: false,\n                startValue: startValue,\n                maxValue: maxValue,\n                incorrectValue: false,\n                alertSetTitle: true\n            })\n        }\n    }\n    const setMaxValue = (newValue: number) => {\n        setState({...state, maxValue: newValue})\n        changeValue(state.startValue, newValue)\n    }\n    const setStartValue = (newValue: number) => {\n        setState({...state, startValue: newValue})\n        changeValue(newValue, state.maxValue)\n    }\n\n\n    return (\n        <div>\n            <Counter\n                value={state.value}\n                addValue={addValue}\n                resetValue={resetValue}\n                errorIncrement={state.errorIncrement}\n                errorReset={state.errorReset}\n                alertSetTitle={state.alertSetTitle}\n                incorrectValue={state.incorrectValue}\n                error={state.error}\n            />\n            <CounterSetting\n                startValue={state.startValue}\n                maxValue={state.maxValue}\n                setButton={setButton}\n                error={state.errorSetting}\n                setMaxValue={setMaxValue}\n                setStartValue={setStartValue}\n                incorrectValue={state.incorrectValue}\n            />\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}